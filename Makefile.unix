# This file, Makefile.unix, is part of CWEBBIN (@@VERSION@@).
# It is distributed WITHOUT ANY WARRANTY, express or implied.

# Copyright (C) 1987,1990,1993,2000 Silvio Levy and Donald E. Knuth
#
# Modified for GCC under Linux by Andreas Scherer, June 8, 1996.
# Last updated by Andreas Scherer, August 2023.

# The following copyright notice extends to the changes in this Makefile
# only, not to any part of the original CWEB distribution.
#
# Copyright (C) 1994, 1996, 2000, 2005, 2022-2023 Andreas Scherer

# Permission is granted to make and distribute verbatim copies of this
# document provided that the copyright notice and this permission notice
# are preserved on all copies.

# Permission is granted to copy and distribute modified versions of this
# document under the conditions for verbatim copying, provided that the
# entire resulting derived work is given a different name and distributed
# under the terms of a permission notice identical to this one.

# 
# Read the README file, then edit this file to reflect local conditions
#

# directory for TeX inputs (cwebmac.tex and (X|d|f|i)cwebmac.tex and
# the 8-bit encodings go here); the prefix can be overwritten from outside
TEXMFDIR= /usr/local/share/texlive/texmf-local
MACROSDIR= $(TEXMFDIR)/tex/plain/cweb

# directory for CWEB inputs in @i files
CWEBINPUTS= /usr/lib/cweb

# extension for manual pages ("l" distinguishes local from system stuff)
#MANEXT= l
MANEXT= 1

# directory for manual pages (cweb.1 goes here)
MANDIR= /usr/share/man/man$(MANEXT)

# destination directory for executables
BINDIR= /usr/bin

# directory for GNU EMACS Lisp code (cweb.el goes here)
EMACSDIR= /usr/share/emacs/site-lisp

# Set DESTPREF to null if you want to call the executables "tangle" and "weave"
# (probably NOT a good idea; we recommend leaving DESTPREF=c)
DESTPREF= c

# Set CCHANGES to comm-foo.ch if you need changes to common.w
CCHANGES= comm-foo.ch

# Set HCHANGES to comm-foo.h if you apply changes to common.h
# default should be common.h
HCHANGES= comm-foo.h

# Set TCHANGES to ctang-foo.ch if you need changes to ctangle.w
TCHANGES= ctang-foo.ch

# Set WCHANGES to cweav-foo.ch if you need changes to cweave.w
WCHANGES= cweav-foo.ch

# Set LCHANGES to ctwill-foo.ch to mogrify cweave.w into ctwill.w
LCHANGES= ctwill-foo.ch

# Set DCHANGES to cwebman-foo.ch to mogrify cwebman.tex into cwebbin.tex
DCHANGES= cwebman-foo.ch

# Set EXTENSION to either `c' if you want to treat CWEB as a system
# of ordinary ANSI-C programs, or to `cc', `cxx', `cpp' or similar
# if you want to treat CWEB as a system of C++ programs.  Your
# compiler should be able to distinguish between the two forms
# according to the source file extension.  Even with ANSI-C programs
# it is strongly recommended to use C++ compilers, because of the
# much stricter checking of type conversions and module interfaces.
# For highest portability, all of the extra features of C++ are
# avoided in the CWEB system, thus using something like C--.
EXTENSION= cxx

# This list of options works for all UNIX compilers tested.
OPT = -DCWEBINPUTS=\"$(CWEBINPUTS)\" -DHAVE_GETTEXT=1 \
	-Wall -Wextra -Wimplicit-fallthrough=2 \
	-Wno-format-overflow -Wno-stringop-truncation
	# -Wno-char-subscripts # swap the last two lines for LLVM

# We keep debugging info around, for fun, but most users don't need it
CFLAGS = -g $(OPT)
#CFLAGS = -O $(OPT)
# All linkers tested worked fine with this option.
LINKFLAGS = -g # -lintl # in case your compiler doesn't import libintl
#LINKFLAGS = -s # for smaller (stripped) executables on many UNIX systems

# The following set of options work for CC 8.00 on HP-UX 8.00.
# The script cpp.sh is a local workaround for HP-UX 8.00 to unprotorize
# the patched source code, i.e., to remove all ANSI-prototypes.
# If you encounter any problems with the prototypes, look for it at
#    ftp.th-darmstadt.de:/pub/programming/languages/c/unproto-1.2.tar.Z
# If your version of HP-UX 8.00 acknowledges the `-Aa' option, delete
# the reference to cpp.sh.
#CFLAGS = $(OPT) -tp,/usr/local/bin/cpp.sh

# The following set of options work for CC 9.30 on HP-UX 9.01.
#CFLAGS = $(OPT) -Aa

# SunOS 4 has no `EXIT_FAILURE' or `EXIT_SUCCESS' in <stdlib.h>.
#CFLAGS = $(OPT) -DEXIT_FAILURE=20L

# SGI's IRIX 4.0.5 and DEC's Ultrix 4.4 don't need special treatment.
#CFLAGS = $(OPT)

# The `f' flag is turned off to save paper
# The `s' flag displays some statistics
# The `c' flag creates intermediate C/TeX output
WFLAGS = -f +s # +c
TFLAGS = +s # +c

# Always use this extended Makefile
MAKE = make -f Makefile.unix

# Klaus Guntermann's Tie 2.4 processor can easily be installed on UNIX.
TIE = tie

# Add an empty string "" for BSD sed.
SED_I = sed -i

# Replace @VERSION@ placeholder in tie'd change files
SUBVER = $(SED_I) -e "s/@VERSION@/@@VERSION@@/" $@

# What C compiler are you using?
CC = g++ # gcc cc

# RM and CP are used below in case rm and cp are aliased
RM= /bin/rm
CP= /bin/cp

# uncomment the second line if you use xetex to mogrify .dvi files into .pdf
# uncomment the third line if you use pdftex to bypass .dvi files altogether
# uncomment the forth line if you use hitex for HINT output
PDFTEX = dvipdfm
#PDFTEX = xetex
#PDFTEX = pdftex
#PDFTEX = hitex
#PDFTEX = luatex

##########  You shouldn't have to change anything after this point #######

CWEAVE = CWEBINPUTS=$(INCLUDE) ./cweave $(WFLAGS)
CTANGLE = CWEBINPUTS=$(INCLUDE) ./ctangle $(TFLAGS)

# The following files come from the original CWEB distribution and
# are left completely unmodified.

SOURCES = cweave.w common.w ctangle.w

ORIGINAL = $(SOURCES) prod.w \
	Makefile README common.c common.h ctangle.c \
	cwebman.tex cwebmac.tex comm-vms.ch ctang-vms.ch \
	cweav-vms.ch comm-man.ch ctang-man.ch cweav-man.ch \
	comm-pc.ch ctang-pc.ch cweav-pc.ch comm-amiga.ch \
	comm-bs.ch ctang-bs.ch cweav-bs.ch makefile.bs \
	comm-ql.ch ctang-ql.ch cweav-ql.ch readme.ql \
	comm-w32.ch ctang-w32.ch cweav-w32.ch \
	comm-os2.ch comm-mac.ch cweb.1 cweb.el c++lib.w iso_types.w \
	examples/extex.ch examples/extex.w \
	examples/kspell.el examples/Makefile examples/README \
	examples/oemacs.el examples/oemacs.w \
	examples/treeprint.w \
	examples/wc.w examples/wc-dos.ch \
	examples/wmerge.w examples/wmerg-pc.ch examples/wmer-os2.ch \
	examples/wordtest.w \
	examples/xlib_types.w examples/xview_types.w

CTWILLSRC = ctwill.diffs ctwill.w ctwimac.tex prod.diffs proofmac.tex \
	refsort.w twinxmac.tex twinx.w

# The following files make the body of this patched distribution of CWEB.
# Note that not all of these changefiles are actually used.

COMMPATCH = comm-extensions.ch comm-extensions.hch \
	comm-i18n.ch comm-i18n.hch comm-newpage.ch \
	comm-output.ch comm-output.hch \
	comm-patch.ch comm-texlive.ch comm-texlive.hch
CTANGPATCH = ctang-i18n.ch ctang-newpage.ch ctang-output.ch \
	ctang-patch.ch ctang-texlive.ch ctang+u.ch
CWEAVPATCH = cweav-extensions.ch prod-cweave.ch cweav-i18n.ch cweav-newpage.ch \
	cweav-output.ch cweav-patch.ch cweav-texlive.ch cwtw-texlive.ch
CTWILLPATCH = cweav-twill.ch prod-twill.ch ctwill-texlive.ch ctwill-man.ch
CWEBMANPATCH = cwebman-patch.ch cwebman-extensions.ch cwebman-texlive.ch
PATCH = common.$(EXTENSION) ctangle.$(EXTENSION) README.txt Makefile.unix \
	0001-Support-extended-syntax-for-numeric-literals.patch \
	0002-Purge-redundant-TeX-macro.patch \
	cwebbin.spec examples/wmerge.dsp ctangle.1 cweave.1 ctwill.md \
	refsort.1 twinx.1 refsort.ch twinx.ch \
	LICENSE README.md texlive.w system.bux \
	common.bux comm-mini.ch ctwill.bux ctwill-mini.ch ctwill-hint.ch

EXAMPLES = examples/cct.w examples/commonwords.w examples/extex-ansi.ch \
	examples/Makefile.sas examples/matrix.w examples/primes.ch \
	examples/primes.w examples/README.p11 examples/sample.w \
	examples/treeprint-ansi.ch examples/wc-ansi.ch \
	examples/wmerg-ansi.ch examples/wmerg-borlandc.ch \
	examples/wmerg-extensions.ch examples/wmerg-memory.ch \
	examples/wmerg-output.ch examples/wmerg-patch.ch \
	examples/wordtest-ansi.ch

I18N = po

INCLUDE = cwebinputs

MACROS = texinputs

VAULT = vault

ALL = $(ORIGINAL) $(CTWILLSRC) $(COMMPATCH) $(CTANGPATCH) $(CWEAVPATCH) \
      $(CTWILLPATCH) $(CWEBMANPATCH) $(PATCH) $(EXAMPLES) $(I18N) \
      $(INCLUDE) $(MACROS) $(VAULT)

.SUFFIXES: .dvi .tex .w .pdf .ref .sref .hnt

.w.tex:
	$(CWEAVE) $*

.tex.dvi:	
	TEXINPUTS=.//: tex $<

.w.dvi:
	$(MAKE) $*.tex
	$(MAKE) $*.dvi

.w.c:
	$(CTANGLE) $*

.w.o:
	$(MAKE) $*.c
	$(MAKE) $*.o

.$(EXTENSION).o:
	$(CC) $(CFLAGS) -c $*.$(EXTENSION)

.w.pdf:
	$(MAKE) $*.tex
	$(MAKE) $*.pdf

.w.hnt:
	$(MAKE) $*.tex
	$(MAKE) $*.hnt

.tex.pdf:
	case "$(PDFTEX)" in \
		dvipdfm ) TEXINPUTS=.//: tex "\let\pdf+ \input $*"; dvipdfm $* ;; \
		xetex ) TEXINPUTS=.//: xetex "\let\pdf+ \input $*" ; \
			TEXINPUTS=.//: xetex "\let\pdf+ \input $*" ;; \
		pdftex ) TEXINPUTS=.//: pdftex $* ; \
			TEXINPUTS=.//: pdftex $* ;; \
		luatex ) TEXINPUTS=.//: luatex $* ; \
			TEXINPUTS=.//: luatex $* ;; \
	esac

.tex.hnt:
	case "$(PDFTEX)" in \
		hitex ) TEXINPUTS=.//: hitex $* ; \
			TEXINPUTS=.//: hitex $* ;; \
	esac

.ref.sref: refsort
	./refsort < $*.ref > $*.sref

# The complete set of files contains the two programs `ctangle' and `cweave',
# the mogrified twin 'ctwill' and its utility programs 'refsort' and 'twinx',
# the manuals `cwebman' and `cwebbin', and the source documentations.
all: ctangle cweave ctwill refsort twinx fullmanual

cautiously: ctangle
	$(MAKE) SAVEcommon.$(EXTENSION)
	$(CTANGLE) common $(CCHANGES) common.$(EXTENSION)
	diff common.$(EXTENSION) SAVEcommon.$(EXTENSION)
	$(RM) SAVEcommon.$(EXTENSION)
	$(MAKE) SAVEctangle.$(EXTENSION)
	$(CTANGLE) ctangle $(TCHANGES) ctangle.$(EXTENSION)
	diff ctangle.$(EXTENSION) SAVEctangle.$(EXTENSION)
	$(RM) SAVEctangle.$(EXTENSION)

SAVEctangle.$(EXTENSION):
	$(CP) ctangle.$(EXTENSION) $@

SAVEcommon.$(EXTENSION):
	$(CP) common.$(EXTENSION) $@

common.$(EXTENSION): common.w $(CCHANGES)
	$(CTANGLE) $^ $@

common.o: common.$(EXTENSION)
	$(CC) $(CFLAGS) -c $^

ctangle: ctangle.o common.o
	$(CC) $(LINKFLAGS) -o $@ $^

ctangle.$(EXTENSION): ctangle.w $(TCHANGES) $(HCHANGES)
	$(CTANGLE) ctangle $(TCHANGES) $@

ctangle.o: ctangle.$(EXTENSION)
	$(CC) $(CFLAGS) -c $^

cweave: cweave.o common.o
	$(CC) $(LINKFLAGS) -o $@ $^

cweave.$(EXTENSION): cweave.w $(WCHANGES) $(HCHANGES) prod-cweave.w
	$(CTANGLE) cweave $(WCHANGES) $@

cweave.o: cweave.$(EXTENSION)
	$(CC) $(CFLAGS) -c $^

prod-cweave.w: prod.w prod-cweave.ch
	$(TIE) -m $@ $^

ctwill: ctwill.o common.o
	$(CC) $(LINKFLAGS) -o $@ $^

ctwill.$(EXTENSION): cweave.w $(LCHANGES) $(HCHANGES) prod-twill.w
	$(CTANGLE) cweave $(LCHANGES) $@

ctwill.o: ctwill.$(EXTENSION)
	$(CC) $(CFLAGS) -c $^

prod-twill.w: prod.w prod-cweave.ch prod-twill.ch
	$(TIE) -m $@ $^

refsort.$(EXTENSION): refsort.w refsort.ch
	$(CTANGLE) $^ $@

refsort: refsort.$(EXTENSION)
	$(CC) $(CFLAGS) -o $@ $^

twinx.$(EXTENSION): twinx.w twinx.ch
	$(CTANGLE) $^ $@

twinx: twinx.$(EXTENSION)
	$(CC) $(CFLAGS) -o $@ $^

boot:
	$(CC) $(CFLAGS) -c ctangle.$(EXTENSION)
	$(CC) $(CFLAGS) -c common.$(EXTENSION)
	$(CC) $(LINKFLAGS) -o ctangle ctangle.o common.o

# Take a good lecture for bedtime reading
doc: $(SOURCES:.w=.pdf)

docs: cwebman.pdf cwebbin.pdf common.pdf ctangle.pdf cweave.pdf ctwill.pdf

cwebman.dvi: cwebman.tex
cwebbin.dvi: cwebbin.tex
common.dvi: common.tex
ctangle.dvi: ctangle.tex
cweave.dvi: cweave.tex
ctwill.dvi: ctwill.tex

usermanual: cwebbin.pdf

fullmanual: usermanual $(SOURCES) \
	comm-doc.ch ctang-doc.ch cweav-doc.ch ctwill-doc.ch \
	$(HCHANGES) $(MCHANGES)
	$(CWEAVE) common.w comm-doc.ch; $(MAKE) common.pdf
	$(CWEAVE) ctangle.w ctang-doc.ch; $(MAKE) ctangle.pdf
	$(CWEAVE) cweave.w cweav-doc.ch; $(MAKE) cweave.pdf
	$(CWEAVE) cweave.w ctwill-doc.ch ctwill; $(MAKE) ctwill.pdf

cwebbin.tex: cwebman.tex $(DCHANGES)
	$(TIE) -m $@ $^ && $(SUBVER)
	$(SED_I) -e "1,90 s/CWEBbin/\\\\.{&}/" \
		-e "91,$$ s/CWEBbin/\\\\\\\\.\\\\{&\\\\}/" $@

# the documentation change files are created automatically by the TIE
# processor from a set of separate change files.  note that not all
# change files listed above are actually used here, so you won't see
# any system-dependent parts not available under UNIX.
comm-doc.ch: common.w $(CCHANGES) comm-man.ch comm-newpage.ch
	$(TIE) -c $@ $^ && $(SUBVER)
	$(SED_I) -e "1,20 s/CWEBbin/\\\\.{&}/" $@
ctang-doc.ch: ctangle.w $(TCHANGES) ctang-man.ch ctang-newpage.ch
	$(TIE) -c $@ $^ && $(SUBVER)
	$(SED_I) -e "1,20 s/CWEBbin/\\\\.{&}/" $@
cweav-doc.ch: cweave.w $(WCHANGES) cweav-man.ch cweav-newpage.ch
	$(TIE) -c $@ $^ && $(SUBVER)
	$(SED_I) -e "1,20 s/CWEBbin/\\\\.{&}/" $@
ctwill-doc.ch: cweave.w $(LCHANGES) ctwill-man.ch
	$(TIE) -c $@ $^ && $(SUBVER)
	$(SED_I) -e "1,40 s/CWEBbin/\\\\.{&}/" $@

# for making the documentation we will have to include the change files
ctangle.tex: ctangle.w $(TCHANGES) $(HCHANGES)
	$(CWEAVE) ctangle $(TCHANGES)

cweave.tex: cweave.w $(WCHANGES) $(HCHANGES)
	$(CWEAVE) cweave $(WCHANGES)

ctwill.tex: cweave.w $(LCHANGES) $(HCHANGES)
	$(CWEAVE) cweave $(LCHANGES) ctwill

common.tex: common.w $(CCHANGES)
	$(CWEAVE) common $(CCHANGES)

# the master change files are created automatically by the TIE processor
# from a set of separate change files.  note that not all change files
# listed above are actually used here, so you should not try to re-port
# the resulting sources to Amiga (or MS/DOS).
$(CCHANGES): common.w comm-patch.ch comm-extensions.ch \
	comm-output.ch comm-i18n.ch # comm-texlive.ch
	$(TIE) -c $@ $^ && $(SUBVER)
$(HCHANGES): common.h comm-extensions.hch \
	comm-output.hch comm-i18n.hch # comm-texlive.hch
	$(TIE) -m $@ $^
$(TCHANGES): ctangle.w ctang-patch.ch ctang+u.ch \
	ctang-output.ch ctang-i18n.ch # ctang-texlive.ch
	$(TIE) -c $@ $^ && $(SUBVER)
$(WCHANGES): cweave.w cweav-patch.ch cweav-extensions.ch \
	cweav-output.ch cweav-i18n.ch # cwtw-texlive.ch cweav-texlive.ch
	$(TIE) -c $@ $^ && $(SUBVER)
$(LCHANGES): cweave.w cweav-patch.ch cweav-extensions.ch \
	cweav-output.ch cweav-i18n.ch \
	cweav-twill.ch # cwtw-texlive.ch ctwill-texlive.ch
	$(TIE) -c $@ $^ && $(SUBVER)
$(DCHANGES): cwebman.tex cwebman-patch.ch \
	cwebman-extensions.ch # cwebman-texlive.ch
	$(TIE) -c $@ $^ && $(SUBVER)

# be sure to leave ctangle.$(EXTENSION) and common.$(EXTENSION)
# for bootstrapping
clean:
	$(RM) -f -r *~ *.o common.tex ctangle.tex cweave.tex ctwill.tex \
	cweave.$(EXTENSION) prod-cweave.w ctwill.$(EXTENSION) prod-twill.w \
	cwebbin.tex *-foo.* *-doc.ch *.orig *.rej \
	  *.log *.dvi *.toc *.idx *.scn *.pdf *.hnt core cweave ctangle \
	ctwill refsort twinx refsort.c twinx.c

install: all
	$(INSTALL) -d $(DESTDIR)$(BINDIR) \
		$(DESTDIR)$(MANDIR) \
		$(DESTDIR)$(MACROSDIR) \
		$(DESTDIR)$(EMACSDIR) \
		$(DESTDIR)$(CWEBINPUTS)

	$(INSTALL) ctangle $(DESTDIR)$(BINDIR)/$(DESTPREF)tangle
	$(INSTALL) cweave $(DESTDIR)$(BINDIR)/$(DESTPREF)weave
	$(INSTALL) ctwill $(DESTDIR)$(BINDIR)/$(DESTPREF)twill
	$(INSTALL) refsort $(DESTDIR)$(BINDIR)/refsort
	$(INSTALL) proofsort $(DESTDIR)$(BINDIR)/proofsort
	$(INSTALL) twinx $(DESTDIR)$(BINDIR)/twinx

	$(INSTALL) -m 644 cweb.1 $(DESTDIR)$(MANDIR)/cweb.$(MANEXT)
	$(INSTALL) -m 644 ctangle.1 $(DESTDIR)$(MANDIR)/ctangle.$(MANEXT)
	$(INSTALL) -m 644 cweave.1 $(DESTDIR)$(MANDIR)/cweave.$(MANEXT)
	$(INSTALL) -m 644 ctwill.1 $(DESTDIR)$(MANDIR)/ctwill.$(MANEXT)
	$(INSTALL) -m 644 refsort.1 $(DESTDIR)$(MANDIR)/refsort.$(MANEXT)
	$(INSTALL) -m 644 twinx.1 $(DESTDIR)$(MANDIR)/twinx.$(MANEXT)

	$(INSTALL) -m 644 cwebmac.tex $(MACROS)/* $(DESTDIR)$(MACROSDIR)
	$(INSTALL) -m 644 ctwimac.tex $(DESTDIR)$(MACROSDIR)
	$(INSTALL) -m 644 proofmac.tex $(DESTDIR)$(MACROSDIR)
	$(INSTALL) -m 644 twinxmac.tex $(DESTDIR)$(MACROSDIR)
	$(INSTALL) -m 644 cweb.el $(DESTDIR)$(EMACSDIR)
	$(INSTALL) -m 644 c++lib.w $(INCLUDE)/* $(DESTDIR)$(CWEBINPUTS)

floppy: $(ORIGINAL)
	bar cvhf /dev/rfd0 $(ORIGINAL)
	bar tvf /dev/rfd0
	eject

tags: $(ORIGINAL)
	etags -lnone $(ORIGINAL)

tarfile: $(ORIGINAL)
	tar cvhf /tmp/cweb.tar $(ORIGINAL)
	gzip -9 /tmp/cweb.tar

tarball:
	tar zcvhf /tmp/cweb.tgz $(ORIGINAL)

# Remove the original distribution completely.
remove-orig:
	- $(RM) $(ORIGINAL) $(CTWILLSRC)

# Remove the patch completely
remove:
	- $(RM) $(COMMPATCH)
	- $(RM) $(CTANGPATCH)
	- $(RM) $(CWEAVPATCH)
	- $(RM) $(CTWILLPATCH)
	- $(RM) $(CWEBMANPATCH)
	- $(RM) $(PATCH)
	- $(RM) $(EXAMPLES)
	- $(RM) -r $(I18N)
	- $(RM) -r $(INCLUDE)
	- $(RM) -r $(MACROS)
	- $(RM) -r $(VAULT)

# End of Makefile.unix
