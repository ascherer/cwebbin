Changes for COMMON.H by Andreas Scherer, November 6, 2018.

This set of changes converts the COMMON.H module into ANSI-C and C++ code.
All functions are declared in prototypical form.  At several places
additional casts are introduced and `char *' is replaced by `void *', the
default pointer type in ANSI-C.

This is a standalone change file.

For a complete history of the changes made to COMMON.H see COMM-PATCH.CH.

Section 5 (of CTANGLE and CWEAVE).

@x l.29
@<Common code for \.{CWEAVE} and \.{CTANGLE}@>=
typedef short boolean;
typedef char unsigned eight_bits;
@y
@i iso_types.w

@<Common code for \.{CWEAVE} and \.{CTANGLE}@>=
typedef bool boolean;
typedef uint8_t eight_bits;
typedef uint16_t sixteen_bits;
@z

Section 6.

@x l.35
@ @<Include files@>=
@y
@ @<Include files@>=
#include <stdbool.h>
#include <stdint.h>
@z

Section 7.

@x l.47
@d not_eq 032 /* `\.{!=}'\,;  corresponds to MIT's {\tentex\char'32} */
@y
@d non_eq 032 /* `\.{!=}'\,;  corresponds to MIT's {\tentex\char'32} */
@z

Section 8.

@x l.65
@d xisalpha(c) (isalpha(c)&&((eight_bits)c<0200))
@d xisdigit(c) (isdigit(c)&&((eight_bits)c<0200))
@d xisspace(c) (isspace(c)&&((eight_bits)c<0200))
@d xislower(c) (islower(c)&&((eight_bits)c<0200))
@d xisupper(c) (isupper(c)&&((eight_bits)c<0200))
@d xisxdigit(c) (isxdigit(c)&&((eight_bits)c<0200))
@y
@d xisalpha(c) (isalpha((eight_bits)c)&&((eight_bits)c<0200))
@d xisdigit(c) (isdigit((eight_bits)c)&&((eight_bits)c<0200))
@d xisspace(c) (isspace((eight_bits)c)&&((eight_bits)c<0200))
@d xislower(c) (islower((eight_bits)c)&&((eight_bits)c<0200))
@d xisupper(c) (isupper((eight_bits)c)&&((eight_bits)c<0200))
@d xisxdigit(c) (isxdigit((eight_bits)c)&&((eight_bits)c<0200))
@z

Section 9.

@x l.79
@d length(c) (c+1)->byte_start-(c)->byte_start /* the length of a name */
@y
@d length(c) (size_t)((c+1)->byte_start-(c)->byte_start) /* the length of a name */
@z

@x l.96
  char *equiv_or_xref; /* info corresponding to names */
@y
  void *equiv_or_xref; /* info corresponding to names */
@z

@x l.109
extern name_pointer id_lookup(); /* looks up a string in the identifier table */
extern name_pointer section_lookup(); /* finds section name */
extern void print_section_name(), sprint_section_name();
@y
extern boolean names_match(name_pointer,const char *,size_t,eight_bits);@/
extern name_pointer id_lookup(const char *,const char *,char);
   /* looks up a string in the identifier table */
extern name_pointer section_lookup(char *,char *,int); /* finds section name */
extern void init_node(name_pointer);@/
extern void init_p(name_pointer,eight_bits);@/
extern void print_prefix_name(name_pointer);@/
extern void print_section_name(name_pointer);@/
extern void sprint_section_name(char *,name_pointer);@/
@z

Section 10.

@x l.123
extern history; /* indicates how bad this run was */
extern err_print(); /* print error message and context */
extern wrap_up(); /* indicate |history| and exit */
extern void fatal(); /* issue error message and die */
extern void overflow(); /* succumb because a table has overflowed */
@y
extern int history; /* indicates how bad this run was */
extern int wrap_up(void); /* indicate |history| and exit */
extern void err_print(const char *); /* print error message and context */
extern void fatal(const char *,const char *); /* issue error message and die */
extern void overflow(const char *); /* succumb because a table has overflowed */
@z

Section 11.

@x l.138
extern include_depth; /* current level of nesting */
@y
extern int include_depth; /* current level of nesting */
@z

@x l.148
extern line[]; /* number of current line in the stacked files */
extern change_line; /* number of current line in change file */
extern change_depth; /* where \.{@@y} originated during a change */
@y
extern int line[]; /* number of current line in the stacked files */
extern int change_line; /* number of current line in change file */
extern int change_depth; /* where \.{@@y} originated during a change */
@z

@x l.154
extern reset_input(); /* initialize to read the web file and change file */
extern get_line(); /* inputs the next line */
extern check_complete(); /* checks that all changes were picked up */
@y
extern boolean get_line(void); /* inputs the next line */
extern void check_complete(void); /* checks that all changes were picked up */
extern void reset_input(void); /* initialize to read the web file and change file */
@z

Section 12.

@x l.160
typedef unsigned short sixteen_bits;
@y
@z

Section 15.

@x l.193
extern void common_init();
@y
extern void common_init(void);@/
extern void print_stats(void);@/
@z
